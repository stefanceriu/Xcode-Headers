//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 16 2018 08:38:15).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <AppKit/NSView.h>

@class DVTMeterThreshold, DVTMeterValue, NSColor, NSFormatter;

@interface DVTMeterView : NSView
{
    double _scaleValue;
    BOOL _radiusSetByAPI;
    BOOL _verticalOffsetSetByAPI;
    BOOL _showRange;
    BOOL _showBaseline;
    double _verticalOffset;
    double _needleWidth;
    double _needleHeightMultiplier;
    double _baselineNeedleWidth;
    double _baselineNeedleHeightMultiplier;
    double _barThickness;
    double _rangeBarThickness;
    double _radius;
    double _rangeRadiusMultipilier;
    double _paddingBetweenThresholdSections;
    NSColor *_defaultRangeColor;
    NSColor *_labelColor;
    NSColor *_needleColor;
    NSColor *_baselineNeedleColor;
    unsigned long long _displayLabelDegreeInterval;
    NSFormatter *_valueLabelFormatter;
    double _labelRadiusMultipilier;
    DVTMeterValue *_currentMeterValues;
    DVTMeterThreshold *_lowRangeThreshold;
    DVTMeterThreshold *_midRangeThreshold;
    DVTMeterThreshold *_highRangeThreshold;
    struct CGPoint _baseMiddlePoint;
}

@property(retain, nonatomic) DVTMeterThreshold *highRangeThreshold; // @synthesize highRangeThreshold=_highRangeThreshold;
@property(retain, nonatomic) DVTMeterThreshold *midRangeThreshold; // @synthesize midRangeThreshold=_midRangeThreshold;
@property(retain, nonatomic) DVTMeterThreshold *lowRangeThreshold; // @synthesize lowRangeThreshold=_lowRangeThreshold;
@property(retain, nonatomic) DVTMeterValue *currentMeterValues; // @synthesize currentMeterValues=_currentMeterValues;
@property(nonatomic) double labelRadiusMultipilier; // @synthesize labelRadiusMultipilier=_labelRadiusMultipilier;
@property(retain, nonatomic) NSFormatter *valueLabelFormatter; // @synthesize valueLabelFormatter=_valueLabelFormatter;
@property(nonatomic) unsigned long long displayLabelDegreeInterval; // @synthesize displayLabelDegreeInterval=_displayLabelDegreeInterval;
@property(retain, nonatomic) NSColor *baselineNeedleColor; // @synthesize baselineNeedleColor=_baselineNeedleColor;
@property(retain, nonatomic) NSColor *needleColor; // @synthesize needleColor=_needleColor;
@property(retain, nonatomic) NSColor *labelColor; // @synthesize labelColor=_labelColor;
@property(retain, nonatomic) NSColor *defaultRangeColor; // @synthesize defaultRangeColor=_defaultRangeColor;
@property(nonatomic) double paddingBetweenThresholdSections; // @synthesize paddingBetweenThresholdSections=_paddingBetweenThresholdSections;
@property(nonatomic) double rangeRadiusMultipilier; // @synthesize rangeRadiusMultipilier=_rangeRadiusMultipilier;
@property(nonatomic) double radius; // @synthesize radius=_radius;
@property(nonatomic) double rangeBarThickness; // @synthesize rangeBarThickness=_rangeBarThickness;
@property(nonatomic) double barThickness; // @synthesize barThickness=_barThickness;
@property(nonatomic) BOOL showBaseline; // @synthesize showBaseline=_showBaseline;
@property(nonatomic) BOOL showRange; // @synthesize showRange=_showRange;
@property(nonatomic) double baselineNeedleHeightMultiplier; // @synthesize baselineNeedleHeightMultiplier=_baselineNeedleHeightMultiplier;
@property(nonatomic) double baselineNeedleWidth; // @synthesize baselineNeedleWidth=_baselineNeedleWidth;
@property(nonatomic) double needleHeightMultiplier; // @synthesize needleHeightMultiplier=_needleHeightMultiplier;
@property(nonatomic) double needleWidth; // @synthesize needleWidth=_needleWidth;
@property(readonly, nonatomic) struct CGPoint baseMiddlePoint; // @synthesize baseMiddlePoint=_baseMiddlePoint;
@property(nonatomic) double verticalOffset; // @synthesize verticalOffset=_verticalOffset;
- (void).cxx_destruct;
- (void)drawGraphInRect:(struct CGRect)arg1;
- (void)drawRect:(struct CGRect)arg1;
- (void)drawUnderlayInRect:(struct CGRect)arg1;
- (void)drawLabelsInRect:(struct CGRect)arg1;
- (void)_drawNeedleInRect:(struct CGRect)arg1 withValue:(double)arg2 andColor:(id)arg3 andWidth:(double)arg4 andHeightMultiplier:(double)arg5;
- (void)_drawMeterRangeSectionWithStartAngle:(double)arg1 thresholdValue:(double)arg2 InRect:(struct CGRect)arg3;
- (void)_drawMeterBackgroundSectionWithStartAngle:(double)arg1 thresholdValue:(double)arg2 InRect:(struct CGRect)arg3 withColor:(id)arg4 showStartSection:(BOOL)arg5 showEndSection:(BOOL)arg6;
- (void)_drawArcSectionWithStartAngle:(double)arg1 thresholdValue:(double)arg2 InRect:(struct CGRect)arg3 withColor:(id)arg4 radius:(double)arg5 thickness:(double)arg6 drawSectionLine:(BOOL)arg7 drawEndSectionLine:(BOOL)arg8;
- (struct CGSize)intrinsicContentSize;
- (double)_derivedStartAngle:(double)arg1;
- (double)_needleRotationDegreesWithValue:(double)arg1;
- (double)_scaledDegreesWithValue:(double)arg1;
- (struct CGPoint)_baseMiddlePointCenteredInRect:(struct CGRect)arg1;
- (double)_maxRadiusNeeded;
- (double)_radiusWithRect:(struct CGRect)arg1;
- (id)initWithFrame:(struct CGRect)arg1;

@end

