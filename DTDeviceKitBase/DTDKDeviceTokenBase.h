//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 16 2018 08:38:15).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

#import <DTDeviceKitBase/DTDKRemoteDeviceToken_Private-Protocol.h>

@class DTDKRemoteDeviceConnection, DTDKRemoteDeviceConsoleController, DVTPlatform, NSArray, NSNumber, NSSet, NSString;
@protocol DTDKRemoteDeviceToken;

@interface DTDKDeviceTokenBase : NSObject <DTDKRemoteDeviceToken_Private>
{
    id <DTDKRemoteDeviceToken> _parent;
    NSString *_deviceName;
    NSNumber *_deviceECID;
    NSString *_deviceIMEI;
    NSString *_deviceClass;
    NSString *_deviceActivationState;
    NSString *_deviceType;
    NSString *_deviceWiFiMAC;
    NSString *_deviceBluetoothMAC;
    NSString *_deviceCodename;
    NSString *_productVersion;
    NSString *_buildVersion;
    NSString *_deviceSerialNumber;
    NSString *_deviceDevelopmentStatus;
    NSString *_deviceColorString;
    NSString *_deviceEnclosureColorString;
    NSString *_deviceArchitecture;
    NSNumber *_deviceTotalCapacity;
    NSNumber *_deviceAvailableCapacity;
    NSNumber *_deviceBatteryCapacity;
    NSNumber *_deviceChipID;
    NSString *_deviceToolsType;
    NSNumber *_deviceProductionSOC;
    NSNumber *_canBeWatchCompanion;
    NSNumber *_isPasscodeLocked;
    NSNumber *_deviceIsProduction;
    BOOL _isWirelessEnabled;
    _Bool deviceAllowsSecureServices;
    _Bool deviceIsSupported;
    _Bool deviceHasInternalTools;
    _Bool deviceHasStandardTools;
    _Bool isConnected;
    _Bool isSupportedOS;
    _Bool hasWiredConnection;
    _Bool hasDirectConnection;
    _Bool hasWirelessConnection;
    NSString *deviceIdentifier;
    NSArray *deviceAddresses;
    NSString *deviceModelUTI;
    NSString *bonjourServiceName;
    long long deviceRsyncPort;
    long long deviceTelnetPort;
    long long deviceSSHPort;
    NSString *deviceHostname;
    NSNumber *deviceProductionSOC;
    NSString *deviceClassForDisplay;
    NSString *deviceSoftwareVersion;
    NSString *deviceCrashReporterKey;
    NSString *deviceProcessorDescription;
    DTDKRemoteDeviceConsoleController *deviceConsoleController;
    NSString *localizedDeviceModel;
    NSArray *supportedDeviceFamilies;
    NSSet *proxiedDeviceTokens;
    id <DTDKRemoteDeviceToken> activeProxiedDeviceToken;
    id darwinNotificationService;
    NSSet *systemApplications;
    void *wakeupToken;
    NSArray *applicationDictionaries;
    NSArray *connections;
    NSSet *provisioningProfiles;
    DTDKRemoteDeviceConnection *primaryConnection;
    DTDKRemoteDeviceConnection *primaryWiredConnection;
    DTDKRemoteDeviceConnection *primaryWirelessConnection;
    NSArray *systemApplicationDictionaries;
    DVTPlatform *platform;
    NSSet *applications;
}

- (void)setApplications:(id)arg1;
@property(readonly, copy) NSSet *applications;
@property(readonly) DVTPlatform *platform; // @synthesize platform;
- (void)setSystemApplicationDictionaries:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *systemApplicationDictionaries;
- (void)setPrimaryWirelessConnection:(id)arg1;
@property(readonly) DTDKRemoteDeviceConnection *primaryWirelessConnection;
- (void)setPrimaryWiredConnection:(id)arg1;
@property(readonly) DTDKRemoteDeviceConnection *primaryWiredConnection;
- (void)setPrimaryConnection:(id)arg1;
@property(readonly) DTDKRemoteDeviceConnection *primaryConnection;
- (void)setProvisioningProfiles:(id)arg1;
@property(readonly, copy, nonatomic) NSSet *provisioningProfiles;
@property(readonly, copy) NSArray *connections; // @synthesize connections;
- (void)setApplicationDictionaries:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *applicationDictionaries;
@property(readonly, nonatomic) void *wakeupToken;
- (void)setSystemApplications:(id)arg1;
@property(readonly, copy) NSSet *systemApplications;
@property(readonly, nonatomic) _Bool hasWirelessConnection; // @synthesize hasWirelessConnection;
@property(readonly, nonatomic) _Bool hasDirectConnection; // @synthesize hasDirectConnection;
@property(readonly, nonatomic) _Bool hasWiredConnection; // @synthesize hasWiredConnection;
@property(readonly, nonatomic) _Bool isSupportedOS; // @synthesize isSupportedOS;
@property(readonly, nonatomic) _Bool isConnected; // @synthesize isConnected;
@property(retain) id darwinNotificationService; // @synthesize darwinNotificationService;
@property(readonly, nonatomic) id <DTDKRemoteDeviceToken> activeProxiedDeviceToken; // @synthesize activeProxiedDeviceToken;
@property(readonly, copy, nonatomic) NSSet *proxiedDeviceTokens; // @synthesize proxiedDeviceTokens;
- (void)setSupportedDeviceFamilies:(id)arg1;
@property(readonly, copy, nonatomic) NSArray *supportedDeviceFamilies;
@property(readonly, nonatomic) NSString *localizedDeviceModel; // @synthesize localizedDeviceModel;
@property(retain, nonatomic) DTDKRemoteDeviceConsoleController *deviceConsoleController; // @synthesize deviceConsoleController;
@property(readonly, copy, nonatomic) NSString *deviceProcessorDescription; // @synthesize deviceProcessorDescription;
@property(readonly, nonatomic) _Bool deviceHasStandardTools; // @synthesize deviceHasStandardTools;
@property(readonly, nonatomic) _Bool deviceHasInternalTools; // @synthesize deviceHasInternalTools;
@property(readonly, copy, nonatomic) NSString *deviceCrashReporterKey; // @synthesize deviceCrashReporterKey;
- (void)setDeviceSoftwareVersion:(id)arg1;
@property(readonly, copy, nonatomic) NSString *deviceSoftwareVersion;
@property(readonly, copy, nonatomic) NSString *deviceClassForDisplay; // @synthesize deviceClassForDisplay;
@property(readonly, nonatomic) _Bool deviceIsSupported; // @synthesize deviceIsSupported;
@property(readonly, copy, nonatomic) NSString *deviceHostname; // @synthesize deviceHostname;
@property(readonly) long long deviceSSHPort; // @synthesize deviceSSHPort;
@property(readonly) long long deviceTelnetPort; // @synthesize deviceTelnetPort;
@property(readonly) long long deviceRsyncPort; // @synthesize deviceRsyncPort;
- (void)setBonjourServiceName:(id)arg1;
@property(readonly, copy, nonatomic) NSString *bonjourServiceName;
@property(readonly) _Bool deviceAllowsSecureServices; // @synthesize deviceAllowsSecureServices;
@property(readonly, nonatomic) NSString *deviceModelUTI; // @synthesize deviceModelUTI;
@property(readonly, copy, nonatomic) NSArray *deviceAddresses; // @synthesize deviceAddresses;
- (void)setDeviceIdentifier:(id)arg1;
@property(readonly, copy) NSString *deviceIdentifier;
- (void).cxx_destruct;
- (_Bool)extendedPairWithError:(id *)arg1 extendedInformationHandler:(CDUnknownBlockType)arg2;
- (void)disableWireless;
- (id)enableWireless;
- (void)removeConnection:(id)arg1;
- (void)addConnection:(id)arg1;
- (id)startTCPRelay;
- (id)takeWirelessPowerAssertionWithName:(id)arg1 deatils:(id)arg2 andTimeout:(double)arg3;
- (_Bool)upgradeApplicationAtPath:(id)arg1 withOptions:(id)arg2 andError:(id *)arg3 withCallback:(CDUnknownBlockType)arg4;
- (_Bool)installApplicationAtPath:(id)arg1 withOptions:(id)arg2 andError:(id *)arg3 withCallback:(CDUnknownBlockType)arg4;
- (_Bool)transferPath:(id)arg1 withOptions:(id)arg2 andError:(id *)arg3 withCallback:(CDUnknownBlockType)arg4;
- (_Bool)uninstallApplicationWithIdentifier:(id)arg1 options:(id)arg2 andError:(id *)arg3 withCallback:(CDUnknownBlockType)arg4;
- (_Bool)installApplicationBundleAtPath:(id)arg1 withOptions:(id)arg2 andError:(id *)arg3 withCallback:(CDUnknownBlockType)arg4;
- (id)checkDeviceCapabilities:(id)arg1 withOptions:(id)arg2 andError:(id *)arg3;
- (_Bool)stopSimulatingLocationWithError:(id *)arg1;
- (_Bool)simulateLatitude:(id)arg1 andLongitude:(id)arg2 withError:(id *)arg3;
- (id)developerDiskImageMountError;
- (_Bool)mountDeveloperDiskImageWithError:(id *)arg1;
- (_Bool)mountDeveloperDiskImage:(id)arg1 withError:(id *)arg2;
- (id)developerDiskImageForDeviceType:(id)arg1 productVersion:(id)arg2 buildVersion:(id)arg3;
- (id)copyAndProcessSharedCache;
- (id)exactSymbolsDirectory:(id *)arg1;
- (id)idealExistingSymbolsDirectory:(id *)arg1;
- (struct _AMDServiceConnection *)startXcodeDeviceMonitorServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startSyslogServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startLocationSimulationServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startSharedCacheCopyingServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startCrashReportCopyMobileServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startCrashReportMoverServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startAppInstallationServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startDebugServerServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startServiceWithIdentifier:(id)arg1 andError:(id *)arg2;
- (id)deviceArbitrationForcedCheckIn;
- (id)deviceArbitrationCheckIn;
- (id)wirelessInstrumentsServer;
- (id)wiredInstrumentsServer;
- (void)cancelPrimaryInstrumentsServer;
- (id)primaryInstrumentsServer;
- (id)startHouseArrestServiceForAppIdentifier:(id)arg1;
- (id)startXcodeDeviceArbitrationService;
- (id)startXcodeDeviceMonitorService;
- (id)startInstrumentsServerService;
- (id)startSyslogService;
- (id)startAppListService;
- (id)startLocationSimulationService;
- (id)startSharedCacheCopyingService;
- (id)startCrashReportCopyMobileService;
- (id)startCrashReportMoverService;
- (id)startAppInstallationService;
- (id)startSpringboardService;
- (id)startDebugServerServiceWithExtension:(id)arg1;
- (id)startServiceWithIdentifier:(id)arg1;
- (void)startSecureServices;
- (void)renameDevice:(id)arg1;
- (_Bool)syncSetDevelopmentFlag:(BOOL)arg1 error:(id *)arg2;
- (id)setDevelopmentFlag:(_Bool)arg1;
- (_Bool)developmentFlag;
- (void)fetchApplications:(CDUnknownBlockType)arg1;
- (id)fetchApplications;
- (void)unpair;
- (id)wakeup;
- (int)executeInSession:(CDUnknownBlockType)arg1;
- (id)installedProvisioningProfileWithUUID:(id)arg1;
- (void)uninstallProvisioningProfiles:(id)arg1;
- (void)uninstallProvisioningProfile:(id)arg1;
- (void)installProvisioningProfiles:(id)arg1;
- (void)installProvisioningProfile:(id)arg1;
- (_Bool)deviceIsActivated;
@property(readonly) _Bool deviceIsPaired;
- (id)hostPairingToken;
- (void)setWirelessEnabled:(BOOL)arg1;
- (_Bool)isWirelessEnabled;
- (void)disconnect;
- (id)dictionaryRepresentation;
- (void)awakeWithDictionaryRepresentation:(id)arg1;
- (void)detachFromParent;
- (void)willDetachFromChild:(id)arg1;
- (id)initWithParentToken:(id)arg1;
- (id)_notSupportedFuture;
- (id)_notSupportedError;
@property(readonly) _Bool hasLoaded_deviceIsProduction;
@property(readonly) _Bool hasLoaded_isPasscodeLocked;
@property(readonly) _Bool hasLoaded_canBeWatchCompanion;
@property(readonly) _Bool hasLoaded_deviceProductionSOC;
@property(readonly) _Bool hasLoaded_deviceToolsType;
@property(readonly) _Bool hasLoaded_deviceChipID;
@property(readonly) _Bool hasLoaded_deviceBatteryCapacity;
@property(readonly) _Bool hasLoaded_deviceAvailableCapacity;
@property(readonly) _Bool hasLoaded_deviceTotalCapacity;
@property(readonly) _Bool hasLoaded_deviceArchitecture;
@property(readonly) _Bool hasLoaded_deviceEnclosureColorString;
@property(readonly) _Bool hasLoaded_deviceColorString;
@property(readonly) _Bool hasLoaded_deviceDevelopmentStatus;
@property(readonly) _Bool hasLoaded_deviceSerialNumber;
@property(readonly) _Bool hasLoaded_buildVersion;
@property(readonly) _Bool hasLoaded_productVersion;
@property(readonly) _Bool hasLoaded_deviceCodename;
@property(readonly) _Bool hasLoaded_deviceBluetoothMAC;
@property(readonly) _Bool hasLoaded_deviceWiFiMAC;
@property(readonly) _Bool hasLoaded_deviceType;
@property(readonly) _Bool hasLoaded_deviceActivationState;
@property(readonly) _Bool hasLoaded_deviceClass;
@property(readonly) _Bool hasLoaded_deviceIMEI;
@property(readonly) _Bool hasLoaded_deviceECID;
@property(readonly) _Bool hasLoaded_deviceName;
- (void)setDeviceIsProduction:(_Bool)arg1;
- (void)setIsPasscodeLocked:(_Bool)arg1;
- (void)setCanBeWatchCompanion:(_Bool)arg1;
- (void)setDeviceProductionSOC:(id)arg1;
- (void)setDeviceToolsType:(id)arg1;
- (void)setDeviceChipID:(id)arg1;
- (void)setDeviceBatteryCapacity:(id)arg1;
- (void)setDeviceAvailableCapacity:(id)arg1;
- (void)setDeviceTotalCapacity:(id)arg1;
- (void)setDeviceArchitecture:(id)arg1;
- (void)setDeviceEnclosureColorString:(id)arg1;
- (void)setDeviceColorString:(id)arg1;
- (void)setDeviceDevelopmentStatus:(id)arg1;
- (void)setDeviceSerialNumber:(id)arg1;
- (void)setBuildVersion:(id)arg1;
- (void)setProductVersion:(id)arg1;
- (void)setDeviceCodename:(id)arg1;
- (void)setDeviceBluetoothMAC:(id)arg1;
- (void)setDeviceWiFiMAC:(id)arg1;
- (void)setDeviceType:(id)arg1;
- (void)setDeviceActivationState:(id)arg1;
- (void)setDeviceClass:(id)arg1;
- (void)setDeviceIMEI:(id)arg1;
- (void)setDeviceECID:(id)arg1;
- (void)setDeviceName:(id)arg1;
@property(readonly) _Bool deviceIsProduction;
@property(readonly) _Bool isPasscodeLocked;
@property(readonly) _Bool canBeWatchCompanion;
@property(readonly, copy) NSNumber *deviceProductionSOC; // @synthesize deviceProductionSOC;
@property(readonly, copy) NSString *deviceToolsType;
@property(readonly, copy) NSNumber *deviceChipID;
@property(readonly, copy) NSNumber *deviceBatteryCapacity;
@property(readonly, copy) NSNumber *deviceAvailableCapacity;
@property(readonly, copy) NSNumber *deviceTotalCapacity;
@property(readonly, copy) NSString *deviceArchitecture;
@property(readonly, copy) NSString *deviceEnclosureColorString;
@property(readonly, copy) NSString *deviceColorString;
@property(readonly, copy) NSString *deviceDevelopmentStatus;
@property(readonly, copy) NSString *deviceSerialNumber;
@property(readonly, copy) NSString *buildVersion;
@property(readonly, copy) NSString *productVersion;
@property(readonly, copy) NSString *deviceCodename;
@property(readonly, copy) NSString *deviceBluetoothMAC;
@property(readonly, copy) NSString *deviceWiFiMAC;
@property(readonly, copy) NSString *deviceType;
@property(readonly, copy) NSString *deviceActivationState;
@property(readonly, copy) NSString *deviceClass;
@property(readonly, copy) NSString *deviceIMEI;
@property(readonly, copy) NSNumber *deviceECID;
@property(readonly, copy) NSString *deviceName;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

