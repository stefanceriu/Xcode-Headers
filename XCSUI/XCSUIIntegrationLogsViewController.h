//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 16 2018 08:38:15).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <DVTKit/DVTViewController.h>

#import <XCSUI/DVTFindBarHostable-Protocol.h>
#import <XCSUI/IDELogViewControllerDelegate-Protocol.h>
#import <XCSUI/XCSUIBotLogEditorScopeBarDelegate-Protocol.h>

@class DVTIncrementalFindBar, DVTScopeBarController, DVTScopeBarsManager, IDESchemeActionsInvocationRecord, NSArray, NSError, NSMenuItem, NSMutableArray, NSOperationQueue, NSScrollView, NSString, NSTextView, NSView, XCSIntegration, XCSUIBotLogScopeBar, XCSUIIntegrationReportDocument, XCSUIProgressViewController;

@interface XCSUIIntegrationLogsViewController : DVTViewController <XCSUIBotLogEditorScopeBarDelegate, IDELogViewControllerDelegate, DVTFindBarHostable>
{
    NSOperationQueue *_scmLogsDownloadQueue;
    NSArray *_beforeTriggersLogMenuItems;
    NSMenuItem *_rawBuildLogMenuItem;
    NSMenuItem *_sourceControlLogMenuItem;
    NSArray *_afterTriggersLogMenuItems;
    NSMenuItem *_rawServiceLogMenuItem;
    NSArray *_logViewControllerMenuItems;
    DVTIncrementalFindBar *_findBar;
    DVTScopeBarController *_findBarScopeBarController;
    NSMutableArray *_logViewControllers;
    BOOL _cancelShowProgressView;
    XCSIntegration *_integration;
    NSError *_error;
    XCSUIIntegrationReportDocument *_document;
    NSArray *_currentSelectedDocumentLocations;
    NSTextView *_textView;
    NSView *_scopeBarsBaseView;
    NSView *_buildLogHostView;
    DVTScopeBarsManager *_scopeBarsManager;
    XCSUIBotLogScopeBar *_scopeBar;
    NSMutableArray *_textViewDicts;
    XCSUIProgressViewController *_progressView;
    NSView *_scopeBarScrollViewHostView;
    IDESchemeActionsInvocationRecord *_schemeActionsInvRecord;
    NSArray *_triggerBeforeLogs;
    NSArray *_triggerAfterLogs;
    NSString *_internalBuildServiceDebugLog;
    NSString *_internalRawBuildLog;
    NSString *_internalSourceControlLog;
    NSScrollView *_rawLogScrollView;
    NSTextView *_rawLogTextView;
}

@property(nonatomic) BOOL cancelShowProgressView; // @synthesize cancelShowProgressView=_cancelShowProgressView;
@property NSTextView *rawLogTextView; // @synthesize rawLogTextView=_rawLogTextView;
@property __weak NSScrollView *rawLogScrollView; // @synthesize rawLogScrollView=_rawLogScrollView;
@property(copy) NSString *internalSourceControlLog; // @synthesize internalSourceControlLog=_internalSourceControlLog;
@property(copy) NSString *internalRawBuildLog; // @synthesize internalRawBuildLog=_internalRawBuildLog;
@property(copy) NSString *internalBuildServiceDebugLog; // @synthesize internalBuildServiceDebugLog=_internalBuildServiceDebugLog;
@property(copy) NSArray *triggerAfterLogs; // @synthesize triggerAfterLogs=_triggerAfterLogs;
@property(copy) NSArray *triggerBeforeLogs; // @synthesize triggerBeforeLogs=_triggerBeforeLogs;
@property(retain) IDESchemeActionsInvocationRecord *schemeActionsInvRecord; // @synthesize schemeActionsInvRecord=_schemeActionsInvRecord;
@property __weak NSView *scopeBarScrollViewHostView; // @synthesize scopeBarScrollViewHostView=_scopeBarScrollViewHostView;
@property(retain) XCSUIProgressViewController *progressView; // @synthesize progressView=_progressView;
@property(retain) NSMutableArray *textViewDicts; // @synthesize textViewDicts=_textViewDicts;
@property(retain) NSMutableArray *logViewControllers; // @synthesize logViewControllers=_logViewControllers;
@property(retain) XCSUIBotLogScopeBar *scopeBar; // @synthesize scopeBar=_scopeBar;
@property(retain) DVTScopeBarsManager *scopeBarsManager; // @synthesize scopeBarsManager=_scopeBarsManager;
@property __weak NSView *buildLogHostView; // @synthesize buildLogHostView=_buildLogHostView;
@property __weak NSView *scopeBarsBaseView; // @synthesize scopeBarsBaseView=_scopeBarsBaseView;
@property NSTextView *textView; // @synthesize textView=_textView;
@property(retain, nonatomic) NSArray *currentSelectedDocumentLocations; // @synthesize currentSelectedDocumentLocations=_currentSelectedDocumentLocations;
@property(nonatomic) __weak XCSUIIntegrationReportDocument *document; // @synthesize document=_document;
@property(retain, nonatomic) NSError *error; // @synthesize error=_error;
@property(retain, nonatomic) XCSIntegration *integration; // @synthesize integration=_integration;
- (void).cxx_destruct;
- (BOOL)validateUserInterfaceItem:(id)arg1;
- (void)dismissFindBar:(id)arg1 andRestoreSelection:(BOOL)arg2;
- (void)hideFindBar;
- (void)dvtFindBar:(id)arg1 didUpdateResults:(id)arg2;
- (void)dvtFindBar:(id)arg1 didUpdateCurrentResult:(id)arg2;
- (id)startingLocationForFindBar:(id)arg1 findingBackwards:(BOOL)arg2;
- (id)findStringMatchingDescriptor:(id)arg1 backwards:(BOOL)arg2 from:(id)arg3 to:(id)arg4;
- (id)_URLForDocumentLocations;
- (void)highlightMatchRange:(struct _NSRange)arg1;
- (void)useSelectionForFind:(id)arg1;
- (void)findPrevious:(id)arg1;
- (void)findNext:(id)arg1;
- (void)find:(id)arg1;
- (void)logViewController:(id)arg1 selectedIndexPathsDidChange:(id)arg2;
- (id)workspace;
- (id)logViewController:(id)arg1 replacementDocumentLocationForOriginalDocumentLocation:(id)arg2;
- (id)addLogViewControllerWithLog:(id)arg1 title:(id)arg2;
- (void)_formatTextView:(id)arg1;
- (void)selectedLogChanged:(id)arg1;
- (void)loadRawTextLog:(id)arg1;
- (void)loadLogViewController:(id)arg1;
- (void)reorderMenuItems;
- (id)addLogMenuItemWithString:(id)arg1 representedObject:(id)arg2;
- (void)showRawTextLog:(id)arg1;
- (void)configureTextView:(id)arg1;
- (id)integrationForLogDownloading;
- (void)logEditorScopeBar:(id)arg1 searchTextChanged:(id)arg2;
- (void)logEditorScopeBar:(id)arg1 showAllResultsChanged:(BOOL)arg2;
- (void)logEditorScopeBar:(id)arg1 stateChanged:(int)arg2;
- (void)primitiveInvalidate;
- (void)_updateScopeBar;
- (void)_loadBuildLogView;
- (void)_reset;
- (void)addScopeBarToViewIfNeeded;
- (void)showFindBar;
- (void)makeFindBar;
- (void)loadView;
- (void)_fetchOtherAssets;
- (void)_fetchSchemeActionsRecord;
- (void)_showProgressViewAfterDelay;
- (void)downloadLogs;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

