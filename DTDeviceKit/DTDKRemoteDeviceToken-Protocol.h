//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 16 2018 08:38:15).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <DTDeviceKit/DVTDeviceToken-Protocol.h>

@class DTDKRemoteDeviceConnection, DTDKRemoteDeviceConsoleController, DTXConnection, DVTFilePath, DVTFuture, DVTPlatform, DVTProvisioningProfile, NSArray, NSDictionary, NSError, NSNumber, NSSet, NSString;
@protocol DTDKRemoteDeviceToken, DVTCancellable;

@protocol DTDKRemoteDeviceToken <DVTDeviceToken>
@property(readonly) long long deviceRsyncPort;
@property(readonly) long long deviceTelnetPort;
@property(readonly) long long deviceSSHPort;
@property(readonly) _Bool deviceAllowsSecureServices;
@property(readonly) _Bool deviceIsPaired;
@property(readonly, copy, nonatomic) NSString *deviceProcessorDescription;
@property(readonly, nonatomic) NSString *deviceModelUTI;
@property(readonly, nonatomic) NSString *localizedDeviceModel;
@property(retain, nonatomic) DTDKRemoteDeviceConsoleController *deviceConsoleController;
@property(readonly, nonatomic) _Bool isSupportedOS;
@property(readonly, copy, nonatomic) NSArray *systemApplicationDictionaries;
@property(readonly, copy, nonatomic) NSArray *applicationDictionaries;
@property(readonly, copy, nonatomic) NSSet *provisioningProfiles;
@property(readonly, copy) NSSet *systemApplications;
@property(readonly, copy) NSSet *applications;
@property(readonly, copy, nonatomic) NSArray *supportedDeviceFamilies;
@property(readonly, nonatomic) _Bool deviceIsSupported;
@property(readonly, nonatomic) _Bool deviceHasStandardTools;
@property(readonly, nonatomic) _Bool deviceHasInternalTools;
@property(readonly, copy, nonatomic) NSString *deviceCrashReporterKey;
@property(readonly, copy, nonatomic) NSString *deviceClassForDisplay;
@property(readonly, copy, nonatomic) NSString *deviceSoftwareVersion;
@property(readonly, copy, nonatomic) NSArray *deviceAddresses;
@property(readonly, copy, nonatomic) NSString *deviceHostname;
@property(readonly) DVTPlatform *platform;
@property(readonly, nonatomic) void *wakeupToken;
@property(readonly, nonatomic) _Bool hasWirelessConnection;
@property(readonly, nonatomic) _Bool hasWiredConnection;
@property(readonly, nonatomic) id <DTDKRemoteDeviceToken> activeProxiedDeviceToken;
@property(readonly, copy, nonatomic) NSSet *proxiedDeviceTokens;
@property(readonly, nonatomic) _Bool hasDirectConnection;
@property(readonly) DTDKRemoteDeviceConnection *primaryWirelessConnection;
@property(readonly) DTDKRemoteDeviceConnection *primaryWiredConnection;
@property(readonly) DTDKRemoteDeviceConnection *primaryConnection;
@property(readonly, copy) NSArray *connections;
@property(readonly) _Bool hasLoaded_deviceIsProduction;
@property(readonly) _Bool hasLoaded_isPasscodeLocked;
@property(readonly) _Bool hasLoaded_canBeWatchCompanion;
@property(readonly) _Bool hasLoaded_deviceProductionSOC;
@property(readonly) _Bool hasLoaded_deviceToolsType;
@property(readonly) _Bool hasLoaded_deviceChipID;
@property(readonly) _Bool hasLoaded_deviceBatteryCapacity;
@property(readonly) _Bool hasLoaded_deviceAvailableCapacity;
@property(readonly) _Bool hasLoaded_deviceTotalCapacity;
@property(readonly) _Bool hasLoaded_deviceArchitecture;
@property(readonly) _Bool hasLoaded_deviceEnclosureColorString;
@property(readonly) _Bool hasLoaded_deviceColorString;
@property(readonly) _Bool hasLoaded_deviceDevelopmentStatus;
@property(readonly) _Bool hasLoaded_deviceSerialNumber;
@property(readonly) _Bool hasLoaded_buildVersion;
@property(readonly) _Bool hasLoaded_productVersion;
@property(readonly) _Bool hasLoaded_deviceCodename;
@property(readonly) _Bool hasLoaded_deviceBluetoothMAC;
@property(readonly) _Bool hasLoaded_deviceWiFiMAC;
@property(readonly) _Bool hasLoaded_deviceType;
@property(readonly) _Bool hasLoaded_deviceActivationState;
@property(readonly) _Bool hasLoaded_deviceClass;
@property(readonly) _Bool hasLoaded_deviceIMEI;
@property(readonly) _Bool hasLoaded_deviceECID;
@property(readonly) _Bool hasLoaded_deviceName;
- (DVTFuture *)startTCPRelay;
- (id <DVTCancellable>)takeWirelessPowerAssertionWithName:(NSString *)arg1 deatils:(NSString *)arg2 andTimeout:(double)arg3;
- (_Bool)upgradeApplicationAtPath:(DVTFilePath *)arg1 withOptions:(NSDictionary *)arg2 andError:(id *)arg3 withCallback:(void (^)(NSDictionary *))arg4;
- (_Bool)installApplicationAtPath:(DVTFilePath *)arg1 withOptions:(NSDictionary *)arg2 andError:(id *)arg3 withCallback:(void (^)(NSDictionary *))arg4;
- (_Bool)transferPath:(DVTFilePath *)arg1 withOptions:(NSDictionary *)arg2 andError:(id *)arg3 withCallback:(void (^)(NSDictionary *))arg4;
- (_Bool)uninstallApplicationWithIdentifier:(NSString *)arg1 options:(NSDictionary *)arg2 andError:(id *)arg3 withCallback:(void (^)(NSDictionary *))arg4;
- (_Bool)installApplicationBundleAtPath:(DVTFilePath *)arg1 withOptions:(NSDictionary *)arg2 andError:(id *)arg3 withCallback:(void (^)(NSDictionary *))arg4;
- (NSDictionary *)checkDeviceCapabilities:(id)arg1 withOptions:(NSDictionary *)arg2 andError:(id *)arg3;
- (_Bool)stopSimulatingLocationWithError:(id *)arg1;
- (_Bool)simulateLatitude:(NSNumber *)arg1 andLongitude:(NSNumber *)arg2 withError:(id *)arg3;
- (DVTFuture *)copyAndProcessSharedCache;
- (NSError *)developerDiskImageMountError;
- (_Bool)mountDeveloperDiskImageWithError:(id *)arg1;
- (_Bool)mountDeveloperDiskImage:(DVTFilePath *)arg1 withError:(id *)arg2;
- (DVTFilePath *)exactSymbolsDirectory:(id *)arg1;
- (DVTFilePath *)idealExistingSymbolsDirectory:(id *)arg1;
- (struct _AMDServiceConnection *)startXcodeDeviceMonitorServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startSyslogServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startLocationSimulationServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startSharedCacheCopyingServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startCrashReportCopyMobileServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startCrashReportMoverServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startAppInstallationServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startDebugServerServiceWithError:(id *)arg1;
- (struct _AMDServiceConnection *)startServiceWithIdentifier:(NSString *)arg1 andError:(id *)arg2;
- (DVTFuture *)deviceArbitrationForcedCheckIn;
- (DVTFuture *)deviceArbitrationCheckIn;
- (DTXConnection *)wirelessInstrumentsServer;
- (DTXConnection *)wiredInstrumentsServer;
- (void)cancelPrimaryInstrumentsServer;
- (DTXConnection *)primaryInstrumentsServer;
- (DVTFuture *)startHouseArrestServiceForAppIdentifier:(NSString *)arg1;
- (DVTFuture *)startXcodeDeviceArbitrationService;
- (DVTFuture *)startXcodeDeviceMonitorService;
- (DVTFuture *)startInstrumentsServerService;
- (DVTFuture *)startSyslogService;
- (DVTFuture *)startAppListService;
- (DVTFuture *)startLocationSimulationService;
- (DVTFuture *)startSharedCacheCopyingService;
- (DVTFuture *)startCrashReportCopyMobileService;
- (DVTFuture *)startCrashReportMoverService;
- (DVTFuture *)startAppInstallationService;
- (DVTFuture *)startSpringboardService;
- (DVTFuture *)startDebugServerServiceWithExtension:(NSString *)arg1;
- (DVTFuture *)startServiceWithIdentifier:(NSString *)arg1;
- (void)startSecureServices;
@property(readonly, nonatomic) _Bool isConnected;
- (void)disableWireless;
- (DVTFuture *)enableWireless;
- (_Bool)isWirelessEnabled;
- (_Bool)deviceIsActivated;
- (void)renameDevice:(NSString *)arg1;
- (_Bool)syncSetDevelopmentFlag:(BOOL)arg1 error:(id *)arg2;
- (DVTFuture *)setDevelopmentFlag:(_Bool)arg1;
- (_Bool)developmentFlag;
- (void)fetchApplications:(void (^)(void))arg1;
- (DVTFuture *)fetchApplications;
- (void)unpair;
- (DVTFuture *)wakeup;
- (int)executeInSession:(int (^)(struct _AMDevice *))arg1;
- (DVTProvisioningProfile *)installedProvisioningProfileWithUUID:(NSString *)arg1;
- (void)uninstallProvisioningProfiles:(id)arg1;
- (void)uninstallProvisioningProfile:(DVTProvisioningProfile *)arg1;
- (void)installProvisioningProfiles:(id)arg1;
- (void)installProvisioningProfile:(DVTProvisioningProfile *)arg1;
- (NSDictionary *)dictionaryRepresentation;
- (void)disconnect;
@end

