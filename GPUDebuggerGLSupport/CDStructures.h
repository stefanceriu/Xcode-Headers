//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 16 2018 08:38:15).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Argument {
    void *value;
    unsigned int core_type;
    unsigned int sem_type;
    unsigned int size;
    unsigned short length;
    unsigned short flags;
};

struct BindingPoint {
    int mExtID;
    int mIntID;
};

struct BlendChannelSetup {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
};

struct Buffer {
    char *_field1;
    unsigned int _field2;
    unsigned long long _field3;
    struct __CFString *_field4;
};

struct BufferObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mBufferSize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBufferUsage;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mBufferData;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBufferTarget;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mBufferAccessFlags;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mBufferMapped;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mBufferMapOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mBufferMapLength;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mBufferMapPointer;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
};

struct BufferSource {
    unsigned int _field1;
    unsigned long long _field2;
    unsigned long long _field3;
    int _field4;
    unsigned int _field5;
};

struct ContextStateMirror<GPUGLSMObjectTypes> {
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mOpenGLAPIVersion;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mOpenGLFunctionalityLevel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mActiveTexture;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mAlphaTestFunc;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mAlphaTestRef;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mBlendColor;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendEquationRGB;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendEquationAlpha;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendSrcRGB;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendSrcAlpha;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendDstRGB;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendDstAlpha;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mClearColor;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mClearDepth;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mClearStencil;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mClientActiveTexture;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mCurrentColor;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> _mColorWritemask;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mCullFaceMode;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mCurrentPaletteMatrix;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mDepthFunc;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDepthMask;
    struct DYStateElement<GPUTools::SM::VecN<float, 2>, GPUTools::CStateBaseAnalysis> _mDepthRange;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mFrontFace;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLineWidth;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mLogicOp;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mMatrixMode;
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis> _mCurrentNormal;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPointSize;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPolygonOffsetFactor;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPolygonOffsetUnits;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mSampleCoverageValue;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mSampleCoverageInvert;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> _mScissorBox;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mShadeModel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilFunc;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mStencilRef;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mStencilValueMask;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mStencilWritemask;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilFail;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilPassDepthFail;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilPassDepthPass;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilBackFunc;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mStencilBackRef;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mStencilBackValueMask;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mStencilBackWritemask;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilBackFail;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilBackPassDepthFail;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilBackPassDepthPass;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> _mViewport;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mImplementationColorReadFormat;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mImplementationColorReadType;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mCurrentTextureCoords[32];
    struct DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::CStateBaseAnalysis> _mCurrentVertexAttrib[16];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mCurrentVertexAttribType[16];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mAlphaTest;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mBlend;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mColorLogicOp;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mColorMaterial;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mCullFace;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDepthTest;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDither;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mFog;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mLighting;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mLineSmooth;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mMatrixPalette;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mMultiSample;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mNormalize;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPointSmooth;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPolygonOffsetFill;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mRescaleNormal;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mSampleAlphaToCoverage;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mSampleAlphaToOne;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mSampleCoverage;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mScissorTest;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mStencilTest;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPointSprite;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPrimitiveRestartFixedIndex;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mRasterizerDiscard;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mClipPlane[8];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mLight[8];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTexture2D[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mFogMode;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mFogDensity;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mFogStart;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mFogEnd;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mFogColor;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mFogHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mGenerateMipmapHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mLineSmoothHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mPerspectiveCorrectionHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mShaderDerivativeHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mPointSmoothHint;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLightModelTwoSide;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightModelAmbient;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackRowLength;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackImageHeight;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackSkipPixels;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackSkipRows;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackSkipImages;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackAlignment;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackRowLength;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackImageHeight;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackSkipPixels;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackSkipRows;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackSkipImages;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackAlignment;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPointSizeMin;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPointSizeMax;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPointFadeThresholdSize;
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis> _mPointDistanceAttenuation;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightAmbient[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightDiffuse[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightSpecular[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightEmission[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightPosition[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis> _mLightSpotDirection[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightSpotExponent[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightSpotCutoff[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightConstantAttenuation[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightLinearAttenuation[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightQuadraticAttenuation[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mClipPlaneValue[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mMaterialAmbient;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mMaterialDiffuse;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mMaterialSpecular;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mMaterialEmission;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mMaterialShininess;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureEnvMode[32];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mTextureEnvColor[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mCombineRGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mCombineAlpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc0RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc1RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc2RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc0Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc1Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc2Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand0RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand1RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand2RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand0Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand1Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand2Alpha[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mRGBScale[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mAlphaScale[32];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mCoordReplace[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mTextureLODBias[32];
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnalysis> _mModelviewMatrix;
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnalysis> _mProjectionMatrix;
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnalysis> _mTextureMatrix[32];
    struct DYStateElement<DYMtx, GPUTools::CStateBaseAnalysis> _mPaletteMatrix[16];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mUniformBufferStart[64];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mUniformBufferSize[64];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureBinding2D[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureBindingCubemap[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureBinding2DArray[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureBinding3D[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mArrayBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mCopyReadBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mCopyWriteBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mPixelPackBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mPixelUnpackBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mUniformBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mUniformBufferBindingIndexed[64];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mRenderbufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mDrawFramebufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mReadFramebufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mCurrentProgram;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mProgramPipelineBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mVertexArrayBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mSamplerBinding[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mQueryAnySamplesPassedBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mQueryAnySamplesPassedConservativeBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mQueryTransformFeedbackPrimitivesWrittenBinding;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mCurrentEventMarker;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mGroupMarkerStack;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mFlushLastTimestamp;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mDrawLastTimestamp;
    struct DYStateElement<GPUTools::SM::GL::StateErrorStatus, GPUTools::CStateBaseAnalysis> _mGLErrorStatus;
    struct ObjectTrackingMap<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>, int> _mVertexArrayObjectMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>, int> _mQueryObjectMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>, int> _mSyncObjectMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>, int> _mTransformFeedbackObjectMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>, int> _mContextTextureObjectMap;
    unsigned long long _mSharegroupID;
    struct SharegroupStateMirror<GPUGLSMObjectTypes> *_mSharegroupMirror;
    StateMirrorManager_45af7f77 *_mManager;
    unsigned long long _mContextID;
};

struct CoreFunction {
    unsigned int fenum;
    unsigned int flags;
    unsigned short padding;
    unsigned short argument_count;
    union {
        unsigned long long context_id;
        unsigned long long receiver_id;
    } ;
    struct Argument return_value;
    struct Argument arguments[16];
    unsigned int fbuf_size;
    unsigned int internal_buffer_size;
    void *fbuf;
    void *internal_buffer;
};

struct DYStateElement<DYMtx, GPUTools::CStateBaseAnalysis> {
    CDStruct_461fb6ec mStateVal;
};

struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> {
    struct BindingPoint mStateVal;
};

struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> {
    struct StateBool mStateVal;
};

struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> {
    struct StateEnum mStateVal;
};

struct DYStateElement<GPUTools::SM::GL::StateErrorStatus, GPUTools::CStateBaseAnalysis> {
    struct StateErrorStatus mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::CStateBaseAnalysis> {
    struct VecN<double, 4> mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<float, 2>, GPUTools::CStateBaseAnalysis> {
    struct VecN<float, 2> mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis> {
    struct VecN<float, 3> mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> {
    struct VecN<float, 4> mStateVal;
};

struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> {
    struct VecN<int, 4> mStateVal;
};

struct DYStateElement<float, GPUTools::CStateBaseAnalysis> {
    float mStateVal;
};

struct DYStateElement<int, GPUTools::CStateBaseAnalysis> {
    int mStateVal;
};

struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> {
    long long mStateVal;
};

struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> {
    basic_string_23d93216 mStateVal;
};

struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnalysis> {
    struct vector<DYMtx, std::__1::allocator<DYMtx>> mStateVal;
};

struct DYStateElement<std::__1::vector<double, std::__1::allocator<double>>, GPUTools::CStateBaseAnalysis> {
    struct vector<double, std::__1::allocator<double>> mStateVal;
};

struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> {
    struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> mStateVal;
};

struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> {
    unsigned int mStateVal;
};

struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> {
    unsigned long long mStateVal;
};

struct FramebufferAttachment<GPUGLSMObjectTypes> {
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mFramebufferAttachmentObjectType;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mFramebufferAttachmentObjectName;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mFramebufferAttachmentTextureLevel;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mFramebufferAttachmentTextureLayer;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mFramebufferAttachmentTextureCubeMapFace;
};

struct FramebufferObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mReadBuffer;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mDrawBuffers[16];
    struct FramebufferAttachment<GPUGLSMObjectTypes> _mAttachments[18];
};

struct Function {
    struct CoreFunction core;
    unsigned long long timestamp;
    unsigned long long duration;
    unsigned long long *backtrace;
    unsigned short backtrace_length;
    unsigned short gl_error;
    int events_type;
    void *events;
    unsigned int events_size;
    unsigned int queue_width;
    unsigned long long queue_id;
    unsigned long long thread_id;
    struct Function *next_associated;
    void *sm_context;
};

struct GPUGLBindPoint {
    unsigned int _field1;
    unsigned int _field2;
    int _field3;
    int _field4;
    unsigned int _field5;
    unsigned int _field6;
    id _field7;
};

struct IFunctionDecoder;

struct NSArray {
    Class _field1;
};

struct ObjectStateEnum {
    int _field1;
    id _field2;
    int _field3;
    _Bool _field4;
};

struct ObjectTrackingMap<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>, unsigned long long> {
    struct unordered_map<unsigned long long, int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, int>>> mInternalIDMap;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>>> mObjectMap;
    int mNextFreeInternalID;
};

struct ObjectTrackingMap<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>, int> {
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> mInternalIDMap;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>>> mObjectMap;
    int mNextFreeInternalID;
};

struct ObjectTrackingMap<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>, int> {
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> mInternalIDMap;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>>> mObjectMap;
    int mNextFreeInternalID;
};

struct ObjectTrackingMap<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>, int> {
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> mInternalIDMap;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>>> mObjectMap;
    int mNextFreeInternalID;
};

struct ObjectTrackingMap<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>, int> {
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> mInternalIDMap;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>>> mObjectMap;
    int mNextFreeInternalID;
};

struct ObjectTrackingMap<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>, int> {
    struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> mInternalIDMap;
    struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>>> mObjectMap;
    int mNextFreeInternalID;
};

struct PassthroughBase {
    struct function<void *(const char *, unsigned long *)> LoadURLData;
};

struct ProgramAttrib<GPUGLSMObjectTypes> {
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _field1;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _field2;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _field3;
};

struct ProgramObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct unordered_map<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>>> mUniformMap;
    struct unordered_map<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>>> mAttribMap;
    struct unordered_map<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>>> mUniformBlockMap;
    struct unordered_map<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>>> mTransformFeedbackVaryingMap;
    struct unordered_map<std::__1::basic_string<char>, int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> _attribLocationBindingMap;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mAttachedFragmentShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mAttachedVertexShader;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLinkedFragmentShader;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLinkedVertexShader;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mLinkedFragmentShaderData;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mLinkedVertexShaderData;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLinkedFragmentShaderCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLinkedVertexShaderCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mLinkedProgramBinaryFormat;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mLinkedProgramBinary;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mFragmentShaderData;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mVertexShaderData;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mFragmentShaderCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexShaderCount;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mFragmentShaderInfoLog;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mVertexShaderInfoLog;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mProgramBinaryFormat;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mProgramBinary;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mProgramSeparable;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mLinkStatus;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mInfoLog;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDeleteStatus;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mAttachCount;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mHasBeenLinked;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mProgramBinaryRetrievableHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferMode;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mBuiltinsUsed;
};

struct ProgramPipelineObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mActiveProgram;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mVertexShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mGeometryShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mFragmentShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTessControlShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTessEvaluationShader;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mValidateStatus;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mInfoLog;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
};

struct ProgramUniform<GPUGLSMObjectTypes> {
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mUniformName;
    struct DYStateElement<std::__1::vector<double, std::__1::allocator<double>>, GPUTools::CStateBaseAnalysis> _mUniformValue;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mUniformData;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformDataOffset;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mUniformType;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mUniformCallType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformScalarCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformArraySize;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformArrayElementIndex;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformLocStride;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mUniformBlockIndex;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformBlockOffset;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformArrayStride;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformMatrixStride;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mUniformIsRowMajor;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mUniformShaderBitmask;
};

struct ProgramUniformBlock<GPUGLSMObjectTypes> {
    struct vector<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>, std::__1::allocator<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>> mUniforms;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mUniformBlockBinding;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mUniformBlockName;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformBlockDataSize;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mUniformBlockShaderBitmask;
};

struct QueryObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mQueryTarget;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mQueryResult;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mQueryResultAvailable;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mQueryActive;
};

struct RenderbufferObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mRenderbufferSamples;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mRenderbufferInternalFormat;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mRenderbufferWidth;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mRenderbufferHeight;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDrawableRetainedBacking;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDrawableLayerBacking;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mDrawablePointer;
};

struct ResourceManager<GPUGLSMObjectTypes>;

struct SamplerObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerMinFilter;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerMagFilter;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerWrapS;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerWrapT;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerWrapR;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mSamplerMaxAnisotropy;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mSamplerMinLod;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mSamplerMaxLod;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerCompareMode;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerCompareFunc;
};

struct ShaderObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mShaderType;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDeleteStatus;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mShaderCount;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mShaderData;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mCompiledShaderCount;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mCompiledShaderData;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mCompileStatus;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mInfoLog;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mCurrentSourceIsCompiled;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mAttachCount;
};

struct SharegroupStateMirror<GPUGLSMObjectTypes>;

struct StateBool {
    int _stateEnum;
};

struct StateEnum {
    int _stateEnum;
};

struct StateErrorStatus {
    int _stateEnum;
};

struct StateMirrorManager<GPUGLSMObjectTypes> {
    struct unordered_map<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>>> _contextStateMirrorMap;
    struct unordered_map<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>>> _sharegroupStateMirrorMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>, unsigned long long> _drawableInfoMap;
    struct PassthroughBase _passthrough;
    unsigned long long _surfaceBoundsDrawableID;
    int _deviceOrientation;
    int _lastFunctionIndex;
};

struct StencilSideSetup {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
};

struct Struct {
    struct __CFString *_field1;
    int _field2;
    unsigned int _field3;
    unsigned int _field4;
    int _field5;
    int _field6;
    unsigned long long _field7;
    struct BufferSource _field8;
    struct vector<GPUToolsPlatformSupport::Common::GPUDebugger::Struct, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::Struct>> _field9;
};

struct StructNameOffset;

struct SyncObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSyncObjectType;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSyncCondition;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mSyncFlags;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
};

struct TFunctionStream<GPUTools::FD::Function, void>;

struct TexEnvChannelSetup {
    unsigned int _field1;
    unsigned int _field2;
    unsigned int _field3;
    unsigned int _field4;
    unsigned int _field5;
    unsigned int _field6;
    unsigned int _field7;
    float _field8;
};

struct TextureLayer<GPUGLSMObjectTypes> {
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureInternalFormat;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureWidth;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureHeight;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mTexData;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTexDataFormat;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTexDataType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureCompressedImageSize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mEngineTexDataFormat;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mEngineTexDataType;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mTexDataOffset;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mTexIOSurface;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mTexIOSurfacePlane;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mTexIOSurfaceYCBCRMatrix;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mTexIOSurfacePixelFormat;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mTexIOSurfaceColorPrimaries;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mTexIOSurfaceTransferFunction;
};

struct TextureObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    struct objc_wrapper<id> displayAttributes;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureMinFilter;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureMagFilter;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureWrapS;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureWrapT;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureWrapR;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mGenerateMipmap;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mTextureMaxAnisotropy;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureMaxLevel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTextureCompressed;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureTarget;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mMaxLevelSpecified;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mHasGeneratedMipmaps;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureCompareMode;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureCompareFunc;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> _mTextureCropRect;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureBaseLevel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTextureImmutableFormat;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureSwizzleRed;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureSwizzleGreen;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureSwizzleBlue;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureSwizzleAlpha;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureMinLod;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureMaxLod;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureImmutableLevels;
    struct unordered_map<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>>> _mTextureLevels;
};

struct TransformFeedbackObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferBindingIndexed[4];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferStart[4];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferSize[4];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTransformFeedbackPaused;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTransformFeedbackActive;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
};

struct TypeOutputFormatTypeAlias {
    int _field1;
    int _field2;
    int _field3;
};

struct VecN<double, 4> {
    double mData[4];
};

struct VecN<float, 2> {
    float mData[2];
};

struct VecN<float, 3> {
    float mData[3];
};

struct VecN<float, 4> {
    float mData[4];
};

struct VecN<int, 4> {
    int mData[4];
};

struct VertexArrayObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mColorArraySize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mColorArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mColorArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mColorArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mColorArrayBufferBinding;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mMatrixIndexArraySize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mNormalArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mNormalArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mNormalArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mNormalArrayBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mPointSizeArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPointSizeArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mPointSizeArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mPointSizeArrayBufferBinding;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexArraySize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mVertexArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mVertexArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mVertexArrayBufferBinding;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mWeightArraySize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mWeightArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mWeightArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mWeightArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mWeightArrayBufferBinding;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureCoordArraySize[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayType[32];
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayStride[32];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayPointer[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayBufferBinding[32];
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexAttribArraySize[16];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayType[16];
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayNormalized[16];
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayStride[16];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayPointer[16];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayBufferBinding[16];
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayDivisor[16];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayInteger[16];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mElementArrayBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mColorArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mMatrixIndexArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mNormalArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPointSizeArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mVertexArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mWeightArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTextureCoordArray[32];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayEnabled[16];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mColorArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mNormalArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mPointSizeArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mVertexArratDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mWeightArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayDataURL[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayDataURL[16];
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mColorArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mNormalArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mPointSizeArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVertexArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mWeightArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayDataOffset[32];
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayDataOffset[16];
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mColorArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mNormalArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mPointSizeArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVertexArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mWeightArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayVAPointerOffset[32];
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayVAPointerOffset[16];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mVARangeURL;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVARangeOffset;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
};

struct _Iterator<GPUTools::FD::Function> {
    struct Function _function;
    void *_encbuf;
    void *_next;
    void *_end;
    struct IFunctionDecoder *_decoder;
    _Bool _fast_size;
};

struct _NSRange {
    unsigned long long _field1;
    unsigned long long _field2;
};

struct __CFString;

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*> *__next_;
};

struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*> {
    struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*> *__next_;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
};

struct function<void *(const char *, unsigned long *)> {
    struct type __buf_;
    struct __base<void *(const char *, unsigned long *)> *__f_;
};

struct objc_wrapper<id> {
    id _object;
};

struct shared_ptr<GPUTools::FD::TFunctionStream<GPUTools::FD::Function, void>> {
    struct TFunctionStream<GPUTools::FD::Function, void> *__ptr_;
    struct __shared_weak_count *__cntrl_;
};

struct type {
    unsigned char __lx[32];
};

struct unique_ptr<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes>, std::__1::default_delete<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes>>> {
    struct __compressed_pair<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes>*, std::__1::default_delete<GPUTools::GL::ResourceManager<GPUGLSMObjectTypes>>> {
        struct ResourceManager<GPUGLSMObjectTypes> *__value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>*>>> {
    struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>**, std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>*>>> {
        struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*> **__value_;
        struct __bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>*>> {
            struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>*>> {
                unsigned long long __value_;
            } __data_;
        } __value_;
    } __ptr_;
};

struct unordered_map<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, int, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, int>>> {
    struct __hash_table<std::__1::__hash_value_type<int, int>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, int>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, int>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>>> {
    struct __hash_table<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>, std::__1::allocator<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::__1::hash<int>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<int, std::__1::__hash_value_type<int, std::__1::shared_ptr<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>>>, std::__1::equal_to<int>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<std::__1::basic_string<char>, int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> {
    struct __hash_table<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char>>, true>, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char>>, true>, std::__1::allocator<std::__1::__hash_value_type<std::__1::basic_string<char>, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<std::__1::basic_string<char>, int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::hash<std::__1::basic_string<char>>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<std::__1::basic_string<char>, std::__1::__hash_value_type<std::__1::basic_string<char>, int>, std::__1::equal_to<std::__1::basic_string<char>>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>, std::__1::equal_to<unsigned long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>, std::__1::equal_to<unsigned long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct unordered_map<unsigned long long, int, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, int>>> {
    struct __hash_table<std::__1::__hash_value_type<unsigned long long, int>, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::hash<unsigned long long>, true>, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::equal_to<unsigned long long>, true>, std::__1::allocator<std::__1::__hash_value_type<unsigned long long, int>>> {
        struct unique_ptr<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>*[], std::__1::__bucket_list_deallocator<std::__1::allocator<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>*>>> __bucket_list_;
        struct __compressed_pair<std::__1::__hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*>, std::__1::allocator<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>>> {
            struct __hash_node_base<std::__1::__hash_node<std::__1::__hash_value_type<unsigned long long, int>, void *>*> __value_;
        } __p1_;
        struct __compressed_pair<unsigned long, std::__1::__unordered_map_hasher<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::hash<unsigned long long>, true>> {
            unsigned long long __value_;
        } __p2_;
        struct __compressed_pair<float, std::__1::__unordered_map_equal<unsigned long long, std::__1::__hash_value_type<unsigned long long, int>, std::__1::equal_to<unsigned long long>, true>> {
            float __value_;
        } __p3_;
    } __table_;
};

struct vector<DYMtx, std::__1::allocator<DYMtx>> {
    CDStruct_183601bc *__begin_;
    CDStruct_183601bc *__end_;
    struct __compressed_pair<DYMtx *, std::__1::allocator<DYMtx>> {
        CDStruct_183601bc *__value_;
    } __end_cap_;
};

struct vector<GPUDebugger::BufferViewer::AdaptorDataSource::Buffer, std::__1::allocator<GPUDebugger::BufferViewer::AdaptorDataSource::Buffer>> {
    struct Buffer *_field1;
    struct Buffer *_field2;
    struct __compressed_pair<GPUDebugger::BufferViewer::AdaptorDataSource::Buffer *, std::__1::allocator<GPUDebugger::BufferViewer::AdaptorDataSource::Buffer>> {
        struct Buffer *_field1;
    } _field3;
};

struct vector<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>, std::__1::allocator<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>> {
    struct ProgramUniform<GPUGLSMObjectTypes> *__begin_;
    struct ProgramUniform<GPUGLSMObjectTypes> *__end_;
    struct __compressed_pair<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>*, std::__1::allocator<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>> {
        struct ProgramUniform<GPUGLSMObjectTypes> *__value_;
    } __end_cap_;
};

struct vector<GPUToolsPlatformSupport::Common::GPUDebugger::Struct, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::Struct>> {
    struct Struct *_field1;
    struct Struct *_field2;
    struct __compressed_pair<GPUToolsPlatformSupport::Common::GPUDebugger::Struct *, std::__1::allocator<GPUToolsPlatformSupport::Common::GPUDebugger::Struct>> {
        struct Struct *_field1;
    } _field3;
};

struct vector<StructNameOffset, std::__1::allocator<StructNameOffset>> {
    struct StructNameOffset *_field1;
    struct StructNameOffset *_field2;
    struct __compressed_pair<StructNameOffset *, std::__1::allocator<StructNameOffset>> {
        struct StructNameOffset *_field1;
    } _field3;
};

struct vector<double, std::__1::allocator<double>> {
    double *__begin_;
    double *__end_;
    struct __compressed_pair<double *, std::__1::allocator<double>> {
        double *__value_;
    } __end_cap_;
};

struct vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>> {
    basic_string_23d93216 *__begin_;
    basic_string_23d93216 *__end_;
    struct __compressed_pair<std::__1::basic_string<char>*, std::__1::allocator<std::__1::basic_string<char>>> {
        basic_string_23d93216 *__value_;
    } __end_cap_;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
} CDStruct_14f26992;

typedef struct {
    unsigned int _field1[4];
} CDStruct_58878026;

typedef struct {
    float m[4][4];
} CDStruct_461fb6ec;

typedef struct CDStruct_183601bc;

// Template types
typedef struct BufferObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mBufferSize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBufferUsage;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mBufferData;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBufferTarget;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mBufferAccessFlags;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mBufferMapped;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mBufferMapOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mBufferMapLength;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mBufferMapPointer;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
} BufferObject_f84884d4;

typedef struct ContextStateMirror<GPUGLSMObjectTypes> {
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mOpenGLAPIVersion;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mOpenGLFunctionalityLevel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mActiveTexture;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mAlphaTestFunc;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mAlphaTestRef;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mBlendColor;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendEquationRGB;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendEquationAlpha;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendSrcRGB;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendSrcAlpha;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendDstRGB;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mBlendDstAlpha;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mClearColor;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mClearDepth;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mClearStencil;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mClientActiveTexture;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mCurrentColor;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> _mColorWritemask;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mCullFaceMode;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mCurrentPaletteMatrix;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mDepthFunc;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDepthMask;
    struct DYStateElement<GPUTools::SM::VecN<float, 2>, GPUTools::CStateBaseAnalysis> _mDepthRange;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mFrontFace;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLineWidth;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mLogicOp;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mMatrixMode;
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis> _mCurrentNormal;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPointSize;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPolygonOffsetFactor;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPolygonOffsetUnits;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mSampleCoverageValue;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mSampleCoverageInvert;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> _mScissorBox;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mShadeModel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilFunc;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mStencilRef;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mStencilValueMask;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mStencilWritemask;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilFail;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilPassDepthFail;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilPassDepthPass;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilBackFunc;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mStencilBackRef;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mStencilBackValueMask;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mStencilBackWritemask;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilBackFail;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilBackPassDepthFail;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mStencilBackPassDepthPass;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> _mViewport;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mImplementationColorReadFormat;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mImplementationColorReadType;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mCurrentTextureCoords[32];
    struct DYStateElement<GPUTools::SM::VecN<double, 4>, GPUTools::CStateBaseAnalysis> _mCurrentVertexAttrib[16];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mCurrentVertexAttribType[16];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mAlphaTest;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mBlend;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mColorLogicOp;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mColorMaterial;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mCullFace;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDepthTest;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDither;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mFog;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mLighting;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mLineSmooth;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mMatrixPalette;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mMultiSample;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mNormalize;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPointSmooth;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPolygonOffsetFill;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mRescaleNormal;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mSampleAlphaToCoverage;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mSampleAlphaToOne;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mSampleCoverage;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mScissorTest;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mStencilTest;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPointSprite;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPrimitiveRestartFixedIndex;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mRasterizerDiscard;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mClipPlane[8];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mLight[8];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTexture2D[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mFogMode;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mFogDensity;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mFogStart;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mFogEnd;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mFogColor;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mFogHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mGenerateMipmapHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mLineSmoothHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mPerspectiveCorrectionHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mShaderDerivativeHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mPointSmoothHint;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLightModelTwoSide;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightModelAmbient;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackRowLength;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackImageHeight;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackSkipPixels;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackSkipRows;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackSkipImages;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPackAlignment;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackRowLength;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackImageHeight;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackSkipPixels;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackSkipRows;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackSkipImages;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUnpackAlignment;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPointSizeMin;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPointSizeMax;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mPointFadeThresholdSize;
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis> _mPointDistanceAttenuation;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightAmbient[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightDiffuse[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightSpecular[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightEmission[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mLightPosition[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 3>, GPUTools::CStateBaseAnalysis> _mLightSpotDirection[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightSpotExponent[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightSpotCutoff[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightConstantAttenuation[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightLinearAttenuation[8];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mLightQuadraticAttenuation[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mClipPlaneValue[8];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mMaterialAmbient;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mMaterialDiffuse;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mMaterialSpecular;
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mMaterialEmission;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mMaterialShininess;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureEnvMode[32];
    struct DYStateElement<GPUTools::SM::VecN<float, 4>, GPUTools::CStateBaseAnalysis> _mTextureEnvColor[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mCombineRGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mCombineAlpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc0RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc1RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc2RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc0Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc1Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSrc2Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand0RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand1RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand2RGB[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand0Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand1Alpha[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mOperand2Alpha[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mRGBScale[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mAlphaScale[32];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mCoordReplace[32];
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mTextureLODBias[32];
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnalysis> _mModelviewMatrix;
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnalysis> _mProjectionMatrix;
    struct DYStateElement<std::__1::vector<DYMtx, std::__1::allocator<DYMtx>>, GPUTools::CStateBaseAnalysis> _mTextureMatrix[32];
    struct DYStateElement<DYMtx, GPUTools::CStateBaseAnalysis> _mPaletteMatrix[16];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mUniformBufferStart[64];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mUniformBufferSize[64];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureBinding2D[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureBindingCubemap[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureBinding2DArray[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureBinding3D[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mArrayBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mCopyReadBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mCopyWriteBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mPixelPackBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mPixelUnpackBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mUniformBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mUniformBufferBindingIndexed[64];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mRenderbufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mDrawFramebufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mReadFramebufferBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mCurrentProgram;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mProgramPipelineBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mVertexArrayBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mSamplerBinding[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mQueryAnySamplesPassedBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mQueryAnySamplesPassedConservativeBinding;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mQueryTransformFeedbackPrimitivesWrittenBinding;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mCurrentEventMarker;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mGroupMarkerStack;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mFlushLastTimestamp;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mDrawLastTimestamp;
    struct DYStateElement<GPUTools::SM::GL::StateErrorStatus, GPUTools::CStateBaseAnalysis> _mGLErrorStatus;
    struct ObjectTrackingMap<GPUTools::SM::GL::VertexArrayObject<GPUGLSMObjectTypes>, int> _mVertexArrayObjectMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::QueryObject<GPUGLSMObjectTypes>, int> _mQueryObjectMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::SyncObject<GPUGLSMObjectTypes>, int> _mSyncObjectMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::TransformFeedbackObject<GPUGLSMObjectTypes>, int> _mTransformFeedbackObjectMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::TextureObject<GPUGLSMObjectTypes>, int> _mContextTextureObjectMap;
    unsigned long long _mSharegroupID;
    struct SharegroupStateMirror<GPUGLSMObjectTypes> *_mSharegroupMirror;
    StateMirrorManager_45af7f77 *_mManager;
    unsigned long long _mContextID;
} ContextStateMirror_eb2bea29;

typedef struct FramebufferObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mReadBuffer;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mDrawBuffers[16];
    struct FramebufferAttachment<GPUGLSMObjectTypes> _mAttachments[18];
} FramebufferObject_bce1d2f2;

typedef struct ProgramAttrib<GPUGLSMObjectTypes> {
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _field1;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _field2;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _field3;
} ProgramAttrib_fb761ac3;

typedef struct ProgramObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct unordered_map<int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>>> mUniformMap;
    struct unordered_map<int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramAttrib<GPUGLSMObjectTypes>>>> mAttribMap;
    struct unordered_map<int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramUniformBlock<GPUGLSMObjectTypes>>>> mUniformBlockMap;
    struct unordered_map<int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::ProgramTransformFeedbackVarying<GPUGLSMObjectTypes>>>> mTransformFeedbackVaryingMap;
    struct unordered_map<std::__1::basic_string<char>, int, std::__1::hash<std::__1::basic_string<char>>, std::__1::equal_to<std::__1::basic_string<char>>, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int>>> _attribLocationBindingMap;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mAttachedFragmentShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mAttachedVertexShader;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLinkedFragmentShader;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLinkedVertexShader;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mLinkedFragmentShaderData;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mLinkedVertexShaderData;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLinkedFragmentShaderCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mLinkedVertexShaderCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mLinkedProgramBinaryFormat;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mLinkedProgramBinary;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mFragmentShaderData;
    struct DYStateElement<std::__1::vector<std::__1::basic_string<char>, std::__1::allocator<std::__1::basic_string<char>>>, GPUTools::CStateBaseAnalysis> _mVertexShaderData;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mFragmentShaderCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexShaderCount;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mFragmentShaderInfoLog;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mVertexShaderInfoLog;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mProgramBinaryFormat;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mProgramBinary;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mProgramSeparable;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mLinkStatus;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mInfoLog;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDeleteStatus;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mAttachCount;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mHasBeenLinked;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mProgramBinaryRetrievableHint;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferMode;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mBuiltinsUsed;
} ProgramObject_00e5663f;

typedef struct ProgramPipelineObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mActiveProgram;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mVertexShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mGeometryShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mFragmentShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTessControlShader;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTessEvaluationShader;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mValidateStatus;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mInfoLog;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
} ProgramPipelineObject_473ebec2;

typedef struct ProgramUniformBlock<GPUGLSMObjectTypes> {
    struct vector<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>, std::__1::allocator<GPUTools::SM::GL::ProgramUniform<GPUGLSMObjectTypes>>> mUniforms;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mUniformBlockBinding;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mUniformBlockName;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mUniformBlockDataSize;
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mUniformBlockShaderBitmask;
} ProgramUniformBlock_b2b71853;

typedef struct QueryObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mQueryTarget;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mQueryResult;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mQueryResultAvailable;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mQueryActive;
} QueryObject_e5a7bd68;

typedef struct RenderbufferObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mRenderbufferSamples;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mRenderbufferInternalFormat;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mRenderbufferWidth;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mRenderbufferHeight;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDrawableRetainedBacking;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mDrawableLayerBacking;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mDrawablePointer;
} RenderbufferObject_ab80af8a;

typedef struct SamplerObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerMinFilter;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerMagFilter;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerWrapS;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerWrapT;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerWrapR;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mSamplerMaxAnisotropy;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mSamplerMinLod;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mSamplerMaxLod;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerCompareMode;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mSamplerCompareFunc;
} SamplerObject_b67dd4ca;

typedef struct StateMirrorManager<GPUGLSMObjectTypes> {
    struct unordered_map<unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::GL::ContextStateMirror<GPUGLSMObjectTypes>*>>> _contextStateMirrorMap;
    struct unordered_map<unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*, std::__1::hash<unsigned long long>, std::__1::equal_to<unsigned long long>, std::__1::allocator<std::__1::pair<const unsigned long long, GPUTools::SM::GL::SharegroupStateMirror<GPUGLSMObjectTypes>*>>> _sharegroupStateMirrorMap;
    struct ObjectTrackingMap<GPUTools::SM::GL::DrawableInfo<GPUGLSMObjectTypes>, unsigned long long> _drawableInfoMap;
    struct PassthroughBase _passthrough;
    unsigned long long _surfaceBoundsDrawableID;
    int _deviceOrientation;
    int _lastFunctionIndex;
} StateMirrorManager_45af7f77;

typedef struct TextureObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    struct objc_wrapper<id> displayAttributes;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureMinFilter;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureMagFilter;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureWrapS;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureWrapT;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureWrapR;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mGenerateMipmap;
    struct DYStateElement<float, GPUTools::CStateBaseAnalysis> _mTextureMaxAnisotropy;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureMaxLevel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTextureCompressed;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureTarget;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mMaxLevelSpecified;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mHasGeneratedMipmaps;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureCompareMode;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureCompareFunc;
    struct DYStateElement<GPUTools::SM::VecN<int, 4>, GPUTools::CStateBaseAnalysis> _mTextureCropRect;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureBaseLevel;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTextureImmutableFormat;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureSwizzleRed;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureSwizzleGreen;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureSwizzleBlue;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureSwizzleAlpha;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureMinLod;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureMaxLod;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureImmutableLevels;
    struct unordered_map<int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>, std::__1::hash<int>, std::__1::equal_to<int>, std::__1::allocator<std::__1::pair<const int, GPUTools::SM::GL::TextureLevel<GPUGLSMObjectTypes>>>> _mTextureLevels;
} TextureObject_43a60ee8;

typedef struct TransformFeedbackObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferBindingIndexed[4];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferStart[4];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mTransformFeedbackBufferSize[4];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTransformFeedbackPaused;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTransformFeedbackActive;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
} TransformFeedbackObject_aaeaaee2;

typedef struct VertexArrayObject<GPUGLSMObjectTypes> {
    int _functionIndex;
    int _objectID;
    int _internalID;
    int mRefCount;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mColorArraySize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mColorArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mColorArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mColorArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mColorArrayBufferBinding;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mMatrixIndexArraySize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mNormalArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mNormalArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mNormalArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mNormalArrayBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mPointSizeArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mPointSizeArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mPointSizeArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mPointSizeArrayBufferBinding;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexArraySize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mVertexArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mVertexArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mVertexArrayBufferBinding;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mWeightArraySize;
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mWeightArrayType;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mWeightArrayStride;
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mWeightArrayPointer;
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mWeightArrayBufferBinding;
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureCoordArraySize[32];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayType[32];
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayStride[32];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayPointer[32];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayBufferBinding[32];
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexAttribArraySize[16];
    struct DYStateElement<GPUTools::SM::GL::StateEnum, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayType[16];
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayNormalized[16];
    struct DYStateElement<int, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayStride[16];
    struct DYStateElement<unsigned long long, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayPointer[16];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayBufferBinding[16];
    struct DYStateElement<unsigned int, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayDivisor[16];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayInteger[16];
    struct DYStateElement<GPUTools::SM::GL::BindingPoint, GPUTools::CStateBaseAnalysis> _mElementArrayBufferBinding;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mColorArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mMatrixIndexArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mNormalArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mPointSizeArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mVertexArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mWeightArray;
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mTextureCoordArray[32];
    struct DYStateElement<GPUTools::SM::GL::StateBool, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayEnabled[16];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mColorArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mNormalArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mPointSizeArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mVertexArratDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mWeightArrayDataURL;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayDataURL[32];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayDataURL[16];
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mColorArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mNormalArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mPointSizeArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVertexArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mWeightArrayDataOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayDataOffset[32];
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayDataOffset[16];
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mColorArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mMatrixIndexArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mNormalArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mPointSizeArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVertexArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mWeightArrayVAPointerOffset;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mTextureCoordArrayVAPointerOffset[32];
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVertexAttribArrayVAPointerOffset[16];
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mVARangeURL;
    struct DYStateElement<long long, GPUTools::CStateBaseAnalysis> _mVARangeOffset;
    struct DYStateElement<std::__1::basic_string<char>, GPUTools::CStateBaseAnalysis> _mObjectLabel;
} VertexArrayObject_1e74c8cd;

typedef struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    unsigned long long __cap_;
                    unsigned long long __size_;
                    char *__data_;
                } __l;
                struct __short {
                    union {
                        unsigned char __size_;
                        char __lx;
                    } ;
                    char __data_[23];
                } __s;
                struct __raw {
                    unsigned long long __words[3];
                } __r;
            } ;
        } __value_;
    } __r_;
} basic_string_23d93216;

typedef struct vector<GPUDebugger::BufferViewer::AdaptorDataSource::Buffer, std::__1::allocator<GPUDebugger::BufferViewer::AdaptorDataSource::Buffer>> {
    struct Buffer *_field1;
    struct Buffer *_field2;
    struct __compressed_pair<GPUDebugger::BufferViewer::AdaptorDataSource::Buffer *, std::__1::allocator<GPUDebugger::BufferViewer::AdaptorDataSource::Buffer>> {
        struct Buffer *_field1;
    } _field3;
} vector_c26b6358;

typedef struct vector<StructNameOffset, std::__1::allocator<StructNameOffset>> {
    struct StructNameOffset *_field1;
    struct StructNameOffset *_field2;
    struct __compressed_pair<StructNameOffset *, std::__1::allocator<StructNameOffset>> {
        struct StructNameOffset *_field1;
    } _field3;
} vector_44d4fed2;

