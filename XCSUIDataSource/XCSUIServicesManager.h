//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 16 2018 08:38:15).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <objc/NSObject.h>

@class DVTDispatchLock, NSArray, NSDate, NSMutableDictionary, NSMutableSet, NSString, XCSUIDataSource;
@protocol XCSServiceConnectionDelegate, XCSUIServicesManagerDelegate;

@interface XCSUIServicesManager : NSObject
{
    NSArray *_defaultsArray;
    NSMutableSet *_services;
    NSMutableSet *_servicesUserCanCreateBotsOn;
    NSMutableSet *_servicesUserCanViewBotsOn;
    BOOL _isRunningInTestContext;
    NSMutableDictionary *_versionInfoByServiceID;
    DVTDispatchLock *_sharedItemsLock;
    id _maintenanceTasksObserver;
    BOOL _ignoreUserDefaults;
    NSString *_clientApplicationName;
    id <XCSUIServicesManagerDelegate> _delegate;
    XCSUIDataSource *_dataSource;
    id <XCSServiceConnectionDelegate> _serviceConnectionDelegate;
    NSDate *_overridenLastMonthAgoDateForTesting;
}

@property(retain, nonatomic) NSDate *overridenLastMonthAgoDateForTesting; // @synthesize overridenLastMonthAgoDateForTesting=_overridenLastMonthAgoDateForTesting;
@property(nonatomic) __weak id <XCSServiceConnectionDelegate> serviceConnectionDelegate; // @synthesize serviceConnectionDelegate=_serviceConnectionDelegate;
@property(nonatomic) BOOL ignoreUserDefaults; // @synthesize ignoreUserDefaults=_ignoreUserDefaults;
@property(nonatomic) __weak XCSUIDataSource *dataSource; // @synthesize dataSource=_dataSource;
@property(nonatomic) __weak id <XCSUIServicesManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) NSString *clientApplicationName; // @synthesize clientApplicationName=_clientApplicationName;
- (void).cxx_destruct;
- (void)issuesStreakForBot:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)overrideLastMonthAgoDateForTesting:(id)arg1;
- (id)dateOneMonthAgoForFetchingIssuesStreak;
- (id)_cachedServiceForIdentifier:(id)arg1;
- (void)maintenanceTaskStatusChangedInService:(id)arg1;
- (BOOL)canUserViewBotsOnService:(id)arg1;
- (BOOL)canUserEditBotOnService:(id)arg1;
- (BOOL)canUserCreateBotOnService:(id)arg1;
- (void)refreshACLCacheForService:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (id)existingServiceMatchingConnectionAddress:(id)arg1;
- (id)existingServiceMatchingNetServiceName:(id)arg1;
- (void)reloadService:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)reloadServices;
- (void)deactivateService:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)activateService:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)_legacyAccountsCachePath;
- (void)cacheAccounts:(id)arg1;
- (id)cachedAccounts;
- (void)removeAccountForService:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;
- (void)addAccountForService:(id)arg1;
- (void)addAccountForConnectionAddress:(id)arg1 withUserName:(id)arg2 password:(id)arg3 completionBlock:(CDUnknownBlockType)arg4;
- (void)updateCache;
- (void)enableService:(id)arg1 enabled:(BOOL)arg2;
- (id)dictionaryForService:(id)arg1;
- (void)reset;
- (void)resetAccounts;
- (void)_fireServiceWasAddedCallbackForService:(id)arg1;
- (void)_fireServiceWasRemovedCallbackForService:(id)arg1;
- (void)_fireDidAttemptToReloadService:(id)arg1 error:(id)arg2;
- (id)enabledServices;
- (id)services;
- (id)initForTesting:(BOOL)arg1 ignoreUserDefaults:(BOOL)arg2 serviceConnectionDelegate:(id)arg3;
- (id)init;

@end

