//
//     Generated by class-dump 3.5 (64 bit) (Debug version compiled Aug 16 2018 08:38:15).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2015 by Steve Nygard.
//

#import <IDEFoundation/IDEDebugProcess.h>

@class DBGLLDBAddressSanitizerHelper, DBGLLDBMainThreadCheckerHelper, DBGLLDBSession, DBGLLDBSwiftRuntimeReportingHelper, DBGLLDBThreadSanitizerHelper, DBGLLDBUBSanitizerHelper, DVTDispatchLock, NSArray, NSMutableDictionary, NSMutableSet;
@protocol DBGSBProcess, DBGSBTarget;

@interface DBGLLDBProcess : IDEDebugProcess
{
    id <DBGSBTarget> _lldbTarget;
    id <DBGSBProcess> _lldbProcess;
    NSMutableSet *_previousThreadsToInvalidate;
    DVTDispatchLock *_previousDBGThreadsLock;
    NSArray *_previousDBGThreads;
    unsigned long long _addressByteSize;
    BOOL _needCodeModuleUpdate;
    BOOL _pendingLazyCodeModuleUpdate;
    DVTDispatchLock *_codeModulesTableLock;
    NSMutableDictionary *_codeModuleForModuleIDTable;
    DBGLLDBAddressSanitizerHelper *_addressSanitizerHelper;
    DBGLLDBThreadSanitizerHelper *_threadSanitizerHelper;
    DBGLLDBUBSanitizerHelper *_UBSanitizerHelper;
    DBGLLDBMainThreadCheckerHelper *_mainThreadCheckerHelper;
    DBGLLDBSwiftRuntimeReportingHelper *_swiftRuntimeReportingHelper;
    BOOL _isDoingAsyncAttach;
    BOOL _isCoreFile;
    NSArray *_loadedCodeModules;
}

+ (id)keyPathsForValuesAffectingSubtitle;
+ (void)initialize;
@property BOOL isCoreFile; // @synthesize isCoreFile=_isCoreFile;
@property BOOL isDoingAsyncAttach; // @synthesize isDoingAsyncAttach=_isDoingAsyncAttach;
@property(copy) NSArray *loadedCodeModules; // @synthesize loadedCodeModules=_loadedCodeModules;
- (void).cxx_destruct;
- (BOOL)isAddressSanitizerRuntimePresent;
- (BOOL)isThreadSanitizerRuntimePresent;
- (id)_mallocStackLogForAddress:(unsigned long long)arg1 size:(unsigned long long)arg2 isLiteZone:(BOOL)arg3 isVMregion:(BOOL)arg4 error:(id *)arg5;
- (void)symbolicatedThreadFromAddress:(unsigned long long)arg1 size:(unsigned long long)arg2 isLiteZone:(BOOL)arg3 isVMregion:(BOOL)arg4 handler:(CDUnknownBlockType)arg5;
- (id)symbolicatedThreadWithAddresses:(id)arg1;
- (id)_swiftRuntimeReportingHelper;
- (id)_mainThreadCheckerHelper;
- (id)_UBSanitizerHelper;
- (id)_threadSanitizerHelper;
- (BOOL)isMemoryFaultForDataValue:(id)arg1;
- (void)shadowMemoryForAddress:(unsigned long long)arg1 numberOfBytes:(unsigned long long)arg2 handleOnMainQueueWithResultHandler:(CDUnknownBlockType)arg3;
- (void)memoryPointerDescriptionForAddress:(unsigned long long)arg1 handleOnMainQueueWithResultHandler:(CDUnknownBlockType)arg2;
- (id)_addressSanitizerHelper;
- (void)recordedThreadsForAddress:(unsigned long long)arg1 handleOnMainQueueWithResultHandler:(CDUnknownBlockType)arg2;
- (void)primitiveInvalidate;
- (void)_assertIsLLDBSessionThread;
- (void)reflectLLDBSelectedThreadAndFrame;
- (BOOL)_isExceptionBreakpoint:(unsigned long long)arg1;
- (void)_updateThreadStateAndStopReason:(id)arg1 controlState:(int *)arg2;
- (void)_handleStopForInstrumentation:(id)arg1 controlState:(int *)arg2 threadState:(int *)arg3 hasCrashed:(char *)arg4;
- (BOOL)isSignalNumberFatal:(unsigned long long)arg1;
- (BOOL)isLLDBExceptionFatal:(unsigned long long)arg1;
- (id)subtitle;
- (void)clearQueueThreadStackStates;
- (void)_readMemoryAtAddress:(unsigned long long)arg1 numberOfBytes:(unsigned long long)arg2 dataToReadInto:(id)arg3 shouldCancel:(id)arg4 progressHandler:(CDUnknownBlockType)arg5 resultHandler:(CDUnknownBlockType)arg6;
- (id)readMemoryAtAddress:(unsigned long long)arg1 numberOfBytes:(unsigned long long)arg2 progressHandler:(CDUnknownBlockType)arg3 resultHandler:(CDUnknownBlockType)arg4;
- (id)readMemoryAtAddress:(unsigned long long)arg1 numberOfBytes:(unsigned long long)arg2 resultHandler:(CDUnknownBlockType)arg3;
- (void)_rawMemoryDataForAddressExpression:(id)arg1 numberOfBytes:(unsigned long long)arg2 resultHandler:(CDUnknownBlockType)arg3;
- (void)rawMemoryDataForAddressExpression:(id)arg1 numberOfBytes:(unsigned long long)arg2 resultHandler:(CDUnknownBlockType)arg3;
- (Class)classForMemoryData;
- (BOOL)updateQueuesAndThreads:(int *)arg1;
- (void)_setInitialCurrentStackFrameForThread:(id)arg1;
- (id)bestStackFrameForFrames:(id)arg1;
- (BOOL)_shouldLookForStackFrameWithDebugSymbols:(id)arg1;
- (BOOL)_shouldSelectFirstSymbolFrame:(id)arg1;
- (void)_updateQueues:(id *)arg1 withComputedThreads:(id)arg2;
- (void)_updateThreads:(id *)arg1 currentThread:(id *)arg2 controlState:(int *)arg3;
- (id)_currentLLDBThread;
- (void)_updateCodeModulesImmediatelyIfNecessary;
- (void)updateCodeModulesImmediately;
- (id)codeModuleForLLDBModule:(id)arg1;
- (void)_updateCodeModulesAfterDelay;
@property BOOL needCodeModuleUpdate;
- (unsigned long long)addressByteSize;
- (id)lldbProcess;
- (void)setCurrentStackFrame:(id)arg1;
@property(readonly) DBGLLDBSession *parentDebugSession;
- (id)contentDelegateUIExtensionIdentifier;
- (id)initWithDebugSession:(id)arg1 lldbProcess:(id)arg2;

@end

